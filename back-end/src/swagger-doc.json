{
  "openapi": "3.0.0",
  "info": {
    "title": "Project Delivery App",
    "version": "1.0.0",
    "description": "Projeto final do modulo de backend prático para requisições de uma aplicação de entregas de cerveja."
  },
  "paths": {
    "/login": {
      "post": {
        "tags": ["Login"],
        "summary": "Endpoint para autenticação de usuário.",
        "description": "Rota responsável por identificar o usuário e gerar token de acesso.",
        "requestBody": {
          "required": true,
          "description": "Recebe do formulário um json com email e password existentes no banco de dados.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autenticação realizada com sucesso."
          },
          "404": {
            "description": "Falha na autenticação, usuário não encontrado."
          },
          "500": {
            "description": "Falha interna com o servidor."
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Endpoint para cadastro de novos usuários.",
        "description": "Rota responsável para cadastro de novos usuário, sem definição de cargo(usuário comum).",
        "requestBody": {
          "required": true,
          "description": "Recebe de um formulário um json com `name`, `email` e `password`.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cadastro realizado com sucesso."
          },
          "500": {
            "description": "Falha interna com o servidor."
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Endpoint para mostrar todos usuários cadastrados.",
        "description": "Rotação responsável por mostrar todos usuários cadastrados.",
        "security": [
          { "token": [] }
        ],
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso."
          },
          "500": {
            "description": "Falha interna com servidor."
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": ["Users"],
        "summary": "Endpoint para deleter usuário pelo ID.",
        "description": "Rota responsável por deletar cadastro de usuário por seu ID.",
        "security": [
          { "token": [] }
        ],
        "parameters": [
          {
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cadastro deletado com sucesso."
          },
          "401": {
            "description": "Acesso não autorizado."
          },
          "404": {
            "description": "ID Não encontrado."
          },
          "500": {
            "description": "Falha interna com o servidor."
          }
        }

      },
      "get": {
        "tags": ["Users"],
        "summary": "Endpoint para buscar usuário pelo ID.",
        "description": "Rota responsável buscar detalhes de usuário por seu ID.",
        "parameters": [
          {
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso."
          },
          "401": {
            "description": "Acesso não autorizado."
          },
          "404": {
            "description": "ID Não encontrado."
          },
          "500": {
            "description": "Falha interna com o servidor."
          }
        }
      }
    },
    "/users/sellers": {
      "get": {
        "tags": ["Users"],
        "summary": "Endpoint para mostrar todos usuários vendedores cadastrados.",
        "description": "Rotação responsável por mostrar vendedores cadastrados.",
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso."
          },
          "500": {
            "description": "Falha interna com servidor."
          }
        }
      }
    },
    "/users/admin/register": {
      "post": {
        "tags": ["Users"],
        "security": [
          {"token": []}
        ],
        "summary": "Endpoint para cadastro de usuário pelo administrador.",
        "description": "Rota responsável para cadastro de novos usuário, onde o administrador, pode definir funções personalizadas.",
        "requestBody": {
          "required": true,
          "description": "Recebe de um formulário um json com `name`, `email`, `role` e `password`.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRoleBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cadastro realizado com sucesso."
          },
          "401": {
            "description": "Acesso não autorizado."
          },
          "500": {
            "description": "Falha interna com o servidor."
          }
        }
      }
    },
    "/products" :{
      "get": {
        "tags": ["Products"],
        "summary": "Endpoint mostra todos productos cadastrados.",
        "description": "Rota responsável por mostrar todos produtos cadastrados.",
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso."
          },
          "500": {
            "description": "Falaha interna com o servidor."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Deve ser um email cadastrado.",
            "example": "zebirita@email.com"
          },
          "password": {
            "type": "string",
            "description": "Deve ser a senha correspondente ao email cadastrado.",
            "example": "$#zebirita#$"
          }
        }
      },
      "NewUserBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Deve ser um e-mail validado pelo formulário que não esteja cadastrado.",
            "example": "biritajr@email.com"
          },
          "password": {
            "type": "string",
            "description": "Sequencia de letras validado pelo formulário.",
            "example": "novasenha123"
          },
          "name": {
            "type": "string",
            "description": "Nome do usuário da conta.",
            "example": "Birita Juninho"
          }
        }
      },
      "NewUserRoleBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewUserBody"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "description": "Uma das roles apresentadas no formulário apresentado para o administrador.",
                "example": "Vendedor"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "token": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}